% create_mice_all_randomMotorizedTreadmill.m
% Sarah West
% 11/30/21

% Creates and saves the lists of data you'll use for the given experiement
% (mouse names and days of data collected). 

% Each row of the structure is a different mouse. 


%% Parameters for directories
clear all;

experiment_name='Random Motorized Treadmill';

dir_base='Y:\Sarah\Analysis\Experiments\';
dir_exper=[dir_base experiment_name '\']; 

% Give the number of digits that should be included in each stack number.
parameters.digitNumber=2; 

dir_out=dir_exper; 
mkdir(dir_out);

%% List of days

% If no stacks in a field, put NaN (don't leave empty, code will default to
% 'all').
% mice_all(1).name='1087'; 
% mice_all(1).days(1).name='112121';
% mice_all(1).days(1).stacks='all'; 
% mice_all(1).days(2).name='112421';
% mice_all(1).days(2).stacks='all'; 
% mice_all(1).days(3).name='112621';
% mice_all(1).days(3).stacks=2:10; 
% mice_all(1).days(4).name='112721';
% mice_all(1).days(4).stacks='all'; 
% mice_all(1).days(5).name='112821';
% mice_all(1).days(5).stacks= [1, 3:10]; 
% mice_all(1).days(6).name='120221';
% mice_all(1).days(6).stacks= 4:11;
% mice_all(1).days(6).spontaneous = 13:18;
% mice_all(1).days(7).name='120721';
% mice_all(1).days(7).stacks=1:10; 
% mice_all(1).days(7).spontaneous= 11:15;
% mice_all(1).days(8).name='121321';
% mice_all(1).days(8).stacks=[1:6, 8:11]; 
% mice_all(1).days(9).name='121721';
% mice_all(1).days(9).stacks= [NaN];
% mice_all(1).days(9).spontaneous= 12:16;
% mice_all(1).days(10).name='010422';
% mice_all(1).days(10).stacks= [2:3, 5:11];
% mice_all(1).days(10).spontaneous= [12:16];
% mice_all(1).days(11).name='010622';
% mice_all(1).days(11).stacks= [NaN];
% mice_all(1).days(11).spontaneous= [11:15]; % Don't use frames before ~3000 in stack 11
% mice_all(1).days(12).name='011122'; 
% mice_all(1).days(12).stacks= 1:10;
% mice_all(1).days(12).spontaneous= [11, 14:17];
% 
% 
% mice_all(2).name='1088';
% mice_all(2).days(1).name='112121';
% mice_all(2).days(1).stacks='all'; 
% mice_all(2).days(2).name='112421';
% mice_all(2).days(2).stacks='all'; 
% mice_all(2).days(3).name='112621';
% mice_all(2).days(3).stacks='all';
% mice_all(2).days(4).name='112721';
% mice_all(2).days(4).stacks='all'; 
% mice_all(2).days(5).name='112821';
% mice_all(2).days(5).stacks='all';      
% mice_all(2).days(6).name='120321';
% mice_all(2).days(6).stacks=2:11;
% mice_all(2).days(6).spontaneous =[12:16];
% mice_all(2).days(7).name='120721';
% mice_all(2).days(7).stacks=3:12;
% mice_all(2).days(7).spontaneous =[NaN];
% mice_all(2).days(8).name='121621';
% mice_all(2).days(8).stacks=6:15;
% mice_all(2).days(8).spontaneous =[17:21];
% mice_all(2).days(9).name='010522';
% mice_all(2).days(9).stacks=[3:10 12];
% mice_all(2).days(9).spontaneous =[13:14, 17];
% mice_all(2).days(10).name='010622';
% mice_all(2).days(10).stacks=6:15;
% mice_all(2).days(10).spontaneous =[1:5];
% 
% mice_all(3).name='1096';
% mice_all(3).days(1).name='112121';
% mice_all(3).days(1).stacks=[1:4, 6:9];
% mice_all(3).days(2).name='112721';
% mice_all(3).days(2).stacks=[1:7, 9:10];
% mice_all(3).days(3).name='112821';
% mice_all(3).days(3).stacks=1:10;
% mice_all(3).days(4).name='120221';
% mice_all(3).days(4).stacks=1:10;
% mice_all(3).days(4).spontaneous =[11:14];
% mice_all(3).days(5).name='120321';
% mice_all(3).days(5).stacks=1:10;
% mice_all(3).days(5).spontaneous =[NaN];
% mice_all(3).days(6).name='120621';
% mice_all(3).days(6).stacks=1:10;
% mice_all(3).days(6).spontaneous =[NaN];
% mice_all(3).days(7).name='121421';
% mice_all(3).days(7).stacks=6:14;
% mice_all(3).days(7).spontaneous =[1:5];
% mice_all(3).days(8).name='121721';
% mice_all(3).days(8).stacks=[NaN];
% mice_all(3).days(8).spontaneous =[1:5];
% mice_all(3).days(9).name='010522';
% mice_all(3).days(9).stacks=[7:10 12:14 17];
% mice_all(3).days(9).spontaneous =[1:5];
% mice_all(3).days(10).name='011122';
% mice_all(3).days(10).stacks=6:15;
% mice_all(3).days(10).spontaneous =[1:5];
% 
% save([dir_out 'mice_all.mat'], 'mice_all');
            

%% OR create by importing a pre-written spreadsheet (with assumed formatting)
% [Make this so user can give lists of fields for the table--> with a Map/dictionary?]

% Spreadsheet directory
dir_spreadsheet = 'Y:\Sarah\Data\Random Motorized Treadmill\';
filename_spreadsheet = 'Recordings list.xlsx';

% Clear existing mice_all, if needed
clear mice_all

% Import spreadsheet as cell array
% (Auto-generated by MATLAB on 17-Feb-2022 12:28:46)

    % Set up the Import Options and import the data
    opts = spreadsheetImportOptions("NumVariables", 16);
    
    % Specify sheet and range
    opts.Sheet = "Days collected";
    opts.DataRange = "A8:P113";
    
    % Specify column names and types
    opts.VariableNames = ["Mouse", "DayNumber", "Day", "Notes", "MotorizedStackNumbers", "NumberMotorizedStacks", "SpeedsUsed", "AccelsUsed", "AvgNumberTransitionsPerStack", "ProbeFrequency", "PuttyUsedForMotor", "MislabeledPuttyTrialNumbers", "BadBehaviorCamStackNumbers", "SpontaneousStackNumbers", "NumberSpontaneousStacks", "MislabeledPuttyTrialNumbers_1"];
    opts.VariableTypes = ["char", "char", "char", "char", "char", "char", "char", "char", "char", "char", "char", "char", "char", "char", "char", "char"];
    
    % Specify variable properties
    opts = setvaropts(opts, ["Mouse", "DayNumber", "Day", "Notes", "MotorizedStackNumbers", "NumberMotorizedStacks", "SpeedsUsed", "AccelsUsed", "AvgNumberTransitionsPerStack", "ProbeFrequency", "PuttyUsedForMotor", "MislabeledPuttyTrialNumbers", "BadBehaviorCamStackNumbers", "SpontaneousStackNumbers", "NumberSpontaneousStacks", "MislabeledPuttyTrialNumbers_1"], "WhitespaceRule", "preserve");
    opts = setvaropts(opts, ["Mouse", "DayNumber", "Day", "Notes", "MotorizedStackNumbers", "NumberMotorizedStacks", "SpeedsUsed", "AccelsUsed", "AvgNumberTransitionsPerStack", "ProbeFrequency", "PuttyUsedForMotor", "MislabeledPuttyTrialNumbers", "BadBehaviorCamStackNumbers", "SpontaneousStackNumbers", "NumberSpontaneousStacks", "MislabeledPuttyTrialNumbers_1"], "EmptyFieldRule", "auto");
    
    % Import the data
    Recordingslist = readtable([dir_spreadsheet filename_spreadsheet], opts, "UseExcel", false);

    % Clear temporary variables
    clear opts

%% From the imported spreadsheet, convert to mice_all 
% [Make this so user can give flexible field names, matching what they
% entered above--> with a Map/dictionary?]

% Find the locations of the start of each mouse entry in the spreadsheet
mouse_indices = [];
for celli = 1:size(Recordingslist,1)

    % If the cell in this column isn't empty, then it's the first entry for
    % a mouse
    if ~isempty(Recordingslist.Mouse{celli})
        mouse_indices = [mouse_indices; celli];
    end
end

% For each of these mice, 
for mousei = 1:numel(mouse_indices)

    % Get the name of the mouse and put it into the structure
    mouse = Recordingslist.Mouse{mouse_indices(mousei)}; 
    mice_all(mousei).name = mouse;

    % Get the range of day entries for this moust (is all the entries until
    % two before the next mouse, mice are separated by a blank row)
    % If not the last mouse
    if mousei ~= numel(mouse_indices)
        day_indices = [mouse_indices(mousei):mouse_indices(mousei+1)-2];
    else 
        % If the last mouse, do just to end of imported data.
        day_indices = [mouse_indices(mousei):size(Recordingslist,1)];
    end

    % For each of these days, 
    for dayi = 1:numel(day_indices)

        % Get the name of the day and put it into the structure.
        day = Recordingslist.Day{day_indices(dayi)}; 
        mice_all(mousei).days(dayi).name = day; 

        % Get the stacks and put it into the structure. Make NaN if
        % empty, because some code defaults to filling in empty.
        stacks = str2num(Recordingslist.MotorizedStackNumbers{day_indices(dayi)});
        if ~isempty(stacks)

            % Convert to a cell array of strings
            mice_all(mousei).days(dayi).stacks = cell(numel(stacks),1); 
            for stacki = 1:numel(stacks)
                mice_all(mousei).days(dayi).stacks{stacki} = sprintf(['%0' num2str(parameters.digitNumber) 'd'], stacks(stacki)); 
            end
        else 
            mice_all(mousei).days(dayi).stacks = {NaN};
        end

        % Get the spontaneous and put it into the structure. Make NaN if
        % empty, because some code defaults to filling in empty.
        stacks = str2num(Recordingslist.SpontaneousStackNumbers{day_indices(dayi)});
        if ~isempty(stacks)
            % Convert to a cell array of strings
            mice_all(mousei).days(dayi).spontaneous = cell(numel(stacks),1); 
            for stacki = 1:numel(stacks)
                mice_all(mousei).days(dayi).spontaneous{stacki} = sprintf(['%0' num2str(parameters.digitNumber) 'd'], stacks(stacki)); 
            end
        else 
            mice_all(mousei).days(dayi).spontaneous = {NaN};
        end

        % Get other parameters
        mice_all(mousei).days(dayi).number_speeds_used = str2num(Recordingslist.SpeedsUsed{day_indices(dayi)}); 
        mice_all(mousei).days(dayi).number_accels_used = str2num(Recordingslist.AccelsUsed{day_indices(dayi)}); 
        mice_all(mousei).days(dayi).average_number_transitions_perstack = str2num(Recordingslist.AvgNumberTransitionsPerStack{day_indices(dayi)}); 
        mice_all(mousei).days(dayi).probe_frequency = str2num(Recordingslist.ProbeFrequency{day_indices(dayi)});
        mice_all(mousei).days(dayi).putty_for_motor = Recordingslist.PuttyUsedForMotor{day_indices(dayi)};
        mice_all(mousei).days(dayi).bad_behavior_video_stacks = Recordingslist.BadBehaviorCamStackNumbers{day_indices(dayi)};
        mice_all(mousei).days(dayi).mislabeled_putty_trials_motor = Recordingslist.MislabeledPuttyTrialNumbers{day_indices(dayi)};
        mice_all(mousei).days(dayi).mislabeled_putty_trials_spontaneous = Recordingslist.MislabeledPuttyTrialNumbers_1{day_indices(dayi)};
    end

    % Clear day_indices, for good measure
    clear day_indices
end

% Remove the mouse I don't want.
mice_all = mice_all([1:6, 8]);

% Save mice_all
save([dir_out 'mice_all.mat'], 'mice_all');
